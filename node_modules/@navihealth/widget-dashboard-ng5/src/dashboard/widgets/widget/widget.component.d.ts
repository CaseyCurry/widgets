import { OnInit, ElementRef, EventEmitter, NgZone, OnDestroy, AfterContentInit, AfterViewInit } from '@angular/core';
import { Widget } from '../widget.model';
import 'rxjs/add/observable/fromEvent';
import { BootstrapService } from '../bootstrap.service';
export declare class WidgetComponent implements OnInit, AfterContentInit, AfterViewInit, OnDestroy {
    private document;
    private elementRef;
    private zone;
    private bootstrapService;
    widget: Widget;
    widgetMoving: EventEmitter<WidgetComponent>;
    widgetDropped: EventEmitter<void>;
    widgetHovered: EventEmitter<WidgetComponent>;
    widgetUnhovered: EventEmitter<void>;
    resizeStarted: EventEmitter<WidgetComponent>;
    close: EventEmitter<Widget>;
    fullscreen: EventEmitter<void>;
    private mouseMoveSubscription;
    private mouseUpSubscription;
    private touchMoveSubscription;
    private touchEndSubscription;
    private moveStartPosition;
    private initialPosition;
    constructor(document: any, elementRef: ElementRef, zone: NgZone, bootstrapService: BootstrapService);
    ngOnInit(): void;
    private getUserPosition(e);
    private notModifiable();
    private notGrabbable(e);
    private startMove(e);
    private move(e);
    private endMove();
    getHeightInformation(): any;
    onWidgetMouseDown(e: any): void;
    onWidgetTouchStart(e: any): void;
    onWidgetMouseEnter(): void;
    onWidgetTouchEnter(): void;
    onWidgetMouseLeave(): void;
    onWidgetTouchLeave(): void;
    onResizerMouseDown(): boolean;
    onResizerTouchStart(): boolean;
    onCloseClick(): void;
    onToggleFullScreenClick(): void;
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
}
