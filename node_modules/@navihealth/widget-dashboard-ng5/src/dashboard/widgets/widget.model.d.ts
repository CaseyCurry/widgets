export declare type RenderFunc = (HtmlElement) => Promise<void>;
export interface IWidth {
    xs: number;
    sm?: number;
    md?: number;
    lg?: number;
    xl?: number;
}
export declare class Widget {
    private currentWidth;
    private readonly minimumWidth;
    id: string;
    title: string;
    initialHeight: string;
    render: RenderFunc;
    isHidden: boolean;
    isExpanded: boolean;
    isFullScreen: boolean;
    private constructor();
    static createAvailableWidget({id, title, width, initialHeight, render}: {
        id: any;
        title: any;
        width: any;
        initialHeight: any;
        render: any;
    }): Widget;
    static createRenderedWidget({id, title, currentWidth, minimumWidth, initialHeight, render}: {
        id: any;
        title: any;
        currentWidth: any;
        minimumWidth: any;
        initialHeight: any;
        render: any;
    }): Widget;
    getCurrentWidth(breakpoint: string): any;
    getCurrentWidths(): IWidth;
    getMinimumWidth(breakpoint: string): any;
    makeFullWidth(breakpoint: string, width: number): void;
    resize(breakpoint: string, width: number): void;
    expand(): void;
    collapse(): void;
    toggleFullScreen(): void;
    clone(): Widget;
}
