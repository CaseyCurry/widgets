{"version":3,"sources":["ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/bootstrap.service.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/dashboard.component.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/spacer/spacer.component.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/library.model.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/layout-editor.model.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/panel/panel.component.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/panel-controls/panel-controls.component.ts","null","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/widget/widget.component.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/widget-controls/widget-controls.component.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/library/library.component.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/drop-target/drop-target.component.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/resize-guideline/resize-guideline.component.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/layout-editor/layout-editor.component.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/dashboard.module.ts","ng://@navihealth/widget-dashboard-ng5/src/dashboard/widgets/widget.model.ts"],"names":["BootstrapService","xl","lg","md","sm","xs","prototype","getCurrentBreakpoint","breakpoint","marker","document","createElement","style","visibility","body","appendChild","breakpointKeys","Object","keys","this","breakpoints","i","length","classList","add","window","getComputedStyle","display","remove","hasBreakpointChanged","currentBreakpoint","getWidth","width","smallerBreakpoints","getSmallerBreakpoints","shift","makeFullWidth","_this","concat","forEach","x","maxColumns","resize","widget","targetWidthOfWidget","getCurrentWidth","getClasses","widths","getCurrentWidths","map","allBreakpoints","slice","indexOf","Injectable","DashboardComponent","Component","args","selector","template","styles","SpacerComponent","elementRef","EventEmitter","ngOnInit","ngAfterContentInit","nativeElement","onMouseEnter","spacerHovered","emit","onTouchEnter","onMouseLeave","spacerUnhovered","onTouchLeave","ElementRef","Input","Output","Library","renderedWidgets","availableWidgets","buildLibrary","isWidgetRendered","renderedWidget","id","widgets","isRendered","edit","xPosition","yPosition","isDisplayed","hide","renderWidget","push","derenderWidget","filter","splice","LayoutEditor","PanelComponent","widgetsService","bootstrapService","onResize","addHorizontalSpacers","preventHighlightingWhileMoving","allowHighlighting","createSpacer","spacer","clearSpacers","items","usedWidthOnRow","indexesToInsertSpacer","dropTarget","movingWidgetComponent","widgetWidth","bind","reverse","toggleOverlay","isOverlayDisplayed","getElementById","getRenderedWidgets","getAvailableWidgets","library","onEditLibrary","event","pageX","pageY","onHideLibrary","clearExistingDropTarget","isWidgetMovingDown","movingWidget","indexOfDrop","insertDropTarget","currentResident","newResident","clone","height","getHeightInformation","onWidgetMove","widgetComponent","onWidgetDropped","onWidgetHovered","console","log","Date","moveHoverSubscription","Observable","of","delay","subscribe","onWidgetUnhovered","unsubscribe","onSpacerHovered","spacerComponent","onSpacerUnhovered","makeGrid","grid","currentRowWidth","nextWidget","nextWidgetWidth","findRowContainingWidget","calculateBoundaries","row","currentPosition","reduce","y","minimumWidth","getMinimumWidth","left","right","offset","drawResizeGuidelines","heightInformation","boundaries","resizeGuidelines","unshift","widthOfGuideline","top","onWidgetResized","indexOfWidget","endWidgetResize","mouseUpSubscription","touchEndSubscription","onWidgetResizeStarted","fromEvent","onRenderWidget","onDerenderWidget","onEditLayout","layoutEditor","onHideLayoutEditor","onWidgetCloseClick","onWidgetToggleFullScreenClick","ngOnDestroy","Inject","DOCUMENT","HostListener","PanelControlsComponent","onLibraryClick","editLibrary","onLayoutClick","editLayout","__read","o","n","m","Symbol","iterator","r","e","call","ar","next","done","value","error","__spread","arguments","WidgetComponent","zone","getUserPosition","changedTouches","notModifiable","isFullScreen","notGrabbable","target","srcElement","contains","closest","startMove","widgetMoving","thisElement","initialPosition","userPosition","moveStartPosition","touches","offsetLeft","offsetTop","move","endMove","widgetDropped","rect","getBoundingClientRect","onWidgetMouseDown","mouseMoveSubscription","runOutsideAngular","onWidgetTouchStart","preventDefault","touchMoveSubscription","onWidgetMouseEnter","widgetHovered","onWidgetTouchEnter","onWidgetMouseLeave","widgetUnhovered","onWidgetTouchLeave","onResizerMouseDown","resizeStarted","onResizerTouchStart","onCloseClick","close","onToggleFullScreenClick","toggleFullScreen","scrollY","bottom","scrollX","fullscreen","classes","_a","apply","isHidden","ngAfterViewInit","container","querySelector","render","then","children","catch","NgZone","WidgetControlsComponent","setTimeout","containerElement","controlsWidth","offsetWidth","buttonsWidth","onCollapseClick","collapse","onExpandClick","expand","LibraryComponent","onDoneClick","onCheckboxChange","libraryWidget","DropTargetComponent","ResizeGuidelineComponent","columnPrefix","guideline","onHover","resized","LayoutEditorComponent","DashboardModule","forRoot","WidgetsService","ngModule","providers","provide","useClass","NgModule","declarations","imports","BrowserModule","exports","bootstrap","Widget","title","currentWidth","initialHeight","assign","freeze","createAvailableWidget","createRenderedWidget","isExpanded"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Widget } from './widget.model';\r\n\r\n@Injectable()\r\nexport class BootstrapService {\r\n  readonly maxColumns = 12;\r\n  readonly columnPrefix = 'col-';\r\n\r\n  // These must remain in order from largest to smallest.\r\n  private readonly breakpoints = {\r\n    xl: 'd-xl-none',\r\n    lg: 'd-lg-none',\r\n    md: 'd-md-none',\r\n    sm: 'd-sm-none',\r\n    xs: 'd-none'\r\n  };\r\n  private currentBreakpoint: string;\r\n\r\n  constructor() { }\r\n\r\n  // Add an element to the DOM and set it's class to prevent it from displaying\r\n  // at each breakpoint until it is, in fact, not displayed. That is the size of\r\n  // the screen.\r\n  private getCurrentBreakpoint(): string {\r\n    let breakpoint = '';\r\n\r\n    const marker = document.createElement('div');\r\n    marker.style.visibility = 'hidden';\r\n    document.body.appendChild(marker);\r\n    const breakpointKeys = Object.keys(this.breakpoints);\r\n\r\n    for (let i = 0; i < breakpointKeys.length; i++) {\r\n      breakpoint = breakpointKeys[i];\r\n      marker.classList.add(this.breakpoints[breakpoint]);\r\n      const style = window.getComputedStyle(marker);\r\n      if (style.display === 'none') {\r\n        break;\r\n      }\r\n    }\r\n\r\n    marker.remove();\r\n    return breakpoint;\r\n  }\r\n\r\n  hasBreakpointChanged() {\r\n    const breakpoint: string = this.getCurrentBreakpoint();\r\n    if (breakpoint !== this.currentBreakpoint) {\r\n      this.currentBreakpoint = breakpoint;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getWidth(getWidth: (string) => number): number {\r\n    let breakpoint = this.getCurrentBreakpoint();\r\n    let width = getWidth(breakpoint);\r\n    if (!width) {\r\n      // Look for the largest breakpoint with a width that is smaller than the current breakpoint.\r\n      const smallerBreakpoints = this.getSmallerBreakpoints(breakpoint);\r\n      while (!width && smallerBreakpoints.length) {\r\n        breakpoint = smallerBreakpoints.shift();\r\n        width = getWidth(breakpoint);\r\n      }\r\n    }\r\n    return width;\r\n  }\r\n\r\n  makeFullWidth(makeFullWidth: (string, number) => void): void {\r\n    const breakpoint = this.getCurrentBreakpoint();\r\n    // Make each breakpoint at the current size and smaller the full width of a row.\r\n    this.getSmallerBreakpoints(breakpoint)\r\n      .concat([breakpoint])\r\n      .forEach(x => {\r\n        makeFullWidth(x, this.maxColumns);\r\n      });\r\n  }\r\n\r\n  resize(widget: Widget, targetWidthOfWidget: number): void {\r\n    let breakpoint = this.getCurrentBreakpoint();\r\n    let width = widget.getCurrentWidth(breakpoint);\r\n    if (!width) {\r\n      // Look for the largest breakpoint with a width that is smaller than the current breakpoint.\r\n      const smallerBreakpoints = this.getSmallerBreakpoints(breakpoint);\r\n      while (!width && smallerBreakpoints.length) {\r\n        breakpoint = smallerBreakpoints.shift();\r\n        width = widget.getCurrentWidth(breakpoint);\r\n      }\r\n    }\r\n    widget.resize(breakpoint, targetWidthOfWidget);\r\n  }\r\n\r\n  getClasses(widget: Widget): string[] {\r\n    const widths = widget.getCurrentWidths();\r\n    return Object.keys(widths)\r\n      .map(x => {\r\n        const width = widths[x];\r\n        if (x === 'xs') {\r\n          return 'col-' + width;\r\n        }\r\n        return 'col-' + x + '-' + width;\r\n      });\r\n  }\r\n\r\n  private getSmallerBreakpoints(breakpoint): string[] {\r\n    const allBreakpoints = Object.keys(this.breakpoints);\r\n    const smallerBreakpoints = allBreakpoints.slice(\r\n      allBreakpoints.indexOf(breakpoint) + 1,\r\n      allBreakpoints.length);\r\n    return smallerBreakpoints;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  template: `<app-widgets-panel class='row'></app-widgets-panel>`,\r\n  styles: [``]\r\n})\r\nexport class DashboardComponent { }\r\n","import { Component, OnInit, ElementRef, Input, Output, EventEmitter, AfterContentInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-widgets-panel-spacer',\r\n  template: `<div (mouseenter)='onMouseEnter()' (touchenter)='onTouchEnter()' (mouseleave)='onMouseLeave()' (touchleave)='onTouchLeave()'>\r\n</div>`,\r\n  styles: [`:host{height:30px}:host>div{height:100%}`]\r\n})\r\nexport class SpacerComponent implements OnInit, AfterContentInit {\r\n  @Input() spacer: object;\r\n  @Output() spacerHovered = new EventEmitter<SpacerComponent>();\r\n  @Output() spacerUnhovered = new EventEmitter<void>();\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngAfterContentInit() {\r\n    this.elementRef.nativeElement.classList.add('col-12');\r\n  }\r\n\r\n  onMouseEnter() {\r\n    this.spacerHovered.emit(this);\r\n  }\r\n\r\n  onTouchEnter() {\r\n    this.spacerHovered.emit(this);\r\n  }\r\n\r\n  onMouseLeave() {\r\n    this.spacerUnhovered.emit();\r\n  }\r\n\r\n  onTouchLeave() {\r\n    this.spacerUnhovered.emit();\r\n  }\r\n}\r\n","import { Widget } from './widget.model';\r\n\r\nexport interface ILibraryWidget {\r\n  isRendered: boolean;\r\n  widget: Widget;\r\n}\r\n\r\nexport class Library {\r\n  isDisplayed = false;\r\n  xPosition: number;\r\n  yPosition: number;\r\n  widgets: ILibraryWidget[];\r\n\r\n  constructor(private renderedWidgets: Widget[], private availableWidgets: Widget[]) {\r\n    this.buildLibrary();\r\n  }\r\n\r\n  private isWidgetRendered(widget): boolean {\r\n    return this.renderedWidgets\r\n      .map(renderedWidget => renderedWidget.id)\r\n      .indexOf(widget.id) >= 0;\r\n  }\r\n\r\n  private buildLibrary() {\r\n    this.widgets = this.availableWidgets.map(widget => {\r\n      const isRendered = this.isWidgetRendered(widget);\r\n      return { isRendered, widget };\r\n    });\r\n  }\r\n\r\n  edit(xPosition: number, yPosition: number) {\r\n    this.isDisplayed = true;\r\n    this.xPosition = xPosition;\r\n    this.yPosition = yPosition;\r\n  }\r\n\r\n  hide() {\r\n    this.isDisplayed = false;\r\n    this.xPosition = null;\r\n    this.yPosition = null;\r\n  }\r\n\r\n  renderWidget(widget: Widget): void {\r\n    this.renderedWidgets.push(widget);\r\n    this.buildLibrary();\r\n  }\r\n\r\n  derenderWidget(widget: Widget): void {\r\n    this.renderedWidgets\r\n      .filter(x => x.id === widget.id)\r\n      .forEach(x => {\r\n        this.renderedWidgets.splice(this.renderedWidgets.indexOf(x), 1);\r\n      });\r\n    this.buildLibrary();\r\n  }\r\n}\r\n","export class LayoutEditor {\r\n  isDisplayed = false;\r\n  xPosition: number;\r\n  yPosition: number;\r\n\r\n  constructor() { }\r\n\r\n  edit(xPosition: number, yPosition: number) {\r\n    this.isDisplayed = true;\r\n    this.xPosition = xPosition;\r\n    this.yPosition = yPosition;\r\n  }\r\n\r\n  hide() {\r\n    this.isDisplayed = false;\r\n    this.xPosition = null;\r\n    this.yPosition = null;\r\n  }\r\n}\r\n","import { Component, OnInit, Inject, HostListener, OnDestroy } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/delay';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Widget } from '../widget.model';\nimport { WidgetComponent } from '../widget/widget.component';\nimport { SpacerComponent } from '../spacer/spacer.component';\nimport { Library } from '../library.model';\nimport { LayoutEditor } from '../layout-editor.model';\nimport { BootstrapService } from '../bootstrap.service';\nimport { IWidgetsService } from '../widgets.service.interface';\n\n@Component({\n  selector: 'app-widgets-panel',\n  template: `<app-widgets-panel-controls (editLibrary)='onEditLibrary($event)' (editLayout)='onEditLayout($event)'></app-widgets-panel-controls>\r\n<app-widgets-library *ngIf='library.isDisplayed' [library]='library' (done)='onHideLibrary()' (renderWidget)='onRenderWidget($event)' (derenderWidget)='onDerenderWidget($event)'></app-widgets-library>\r\n<app-widgets-layout-editor *ngIf='layoutEditor.isDisplayed' [layoutEditor]='layoutEditor' (done)='onHideLayoutEditor()'></app-widgets-layout-editor>\r\n<ng-container *ngFor='let item of items'>\r\n  <app-widget *ngIf='item.widget; else drop' [widget]='item.widget' (widgetMoving)='onWidgetMove($event)' (widgetDropped)='onWidgetDropped()' (widgetHovered)='onWidgetHovered($event)' (widgetUnhovered)='onWidgetUnhovered()' (resizeStarted)='onWidgetResizeStarted($event)'\r\n    (close)='onWidgetCloseClick($event)' (fullscreen)='onWidgetToggleFullScreenClick()'></app-widget>\r\n  <ng-template #drop>\r\n    <app-widget-drop-target *ngIf='item.dropTarget; else spacer' [dropTarget]='item.dropTarget' [height]='item.height'></app-widget-drop-target>\r\n    <ng-template #spacer>\r\n      <app-widgets-panel-spacer [spacer]='item.spacer' (spacerHovered)='onSpacerHovered($event)' (spacerUnhovered)='onSpacerUnhovered()'></app-widgets-panel-spacer>\r\n    </ng-template>\r\n  </ng-template>\r\n</ng-container>\r\n<app-widget-resize-guideline *ngFor='let guideline of resizeGuidelines' [guideline]='guideline' (resized)='onWidgetResized($event)'></app-widget-resize-guideline>`,\n  styles: [`.moving-widget{position:absolute;pointer-events:none;z-index:100}`]\n})\nexport class PanelComponent implements OnInit, OnDestroy {\n  library: Library;\n  layoutEditor = new LayoutEditor();\n  items: any[];\n  resizeGuidelines: any[] = [];\n\n  // All subscriptions must be cleaned up to prevent leaks.\n  private moveHoverSubscription: any;\n  private mouseUpSubscription: Subscription;\n  private touchEndSubscription: Subscription;\n\n  private isOverlayDisplayed = false;\n  private movingWidgetComponent: WidgetComponent;\n\n  @HostListener('window:resize') onResize() {\n    if (this.bootstrapService.hasBreakpointChanged()) {\n      this.addHorizontalSpacers();\n    }\n  }\n\n  constructor(\n    @Inject(DOCUMENT) private document,\n    @Inject('widgetsService') private widgetsService: IWidgetsService,\n    private bootstrapService: BootstrapService) {\n  }\n\n  private preventHighlightingWhileMoving(): void {\n    this.document.body.classList.add('no-highlighting');\n  }\n\n  private allowHighlighting(): void {\n    this.document.body.classList.remove('no-highlighting');\n  }\n\n  private createSpacer(): object {\n    return {\n      spacer: {}\n    };\n  }\n\n  private clearSpacers(): void {\n    for (let i = this.items.length - 1; i >= 0; i--) {\n      if (this.items[i].spacer) {\n        this.items.splice(i, 1);\n      }\n    }\n  }\n\n  private addHorizontalSpacers(): void {\n    this.clearSpacers();\n\n    let usedWidthOnRow = 0;\n    const indexesToInsertSpacer = [0];\n\n    for (let i = 0; i < this.items.length; i++) {\n      const widget = this.items[i].widget || this.items[i].dropTarget;\n\n      if (this.movingWidgetComponent && widget === this.movingWidgetComponent.widget) {\n        continue;\n      }\n\n      const widgetWidth = this.bootstrapService.getWidth(widget.getCurrentWidth.bind(widget));\n      usedWidthOnRow += widgetWidth;\n\n      if (usedWidthOnRow === this.bootstrapService.maxColumns) {\n        indexesToInsertSpacer.push(i + 1);\n        usedWidthOnRow = 0;\n      } else if (usedWidthOnRow > this.bootstrapService.maxColumns) {\n        indexesToInsertSpacer.push(i);\n        usedWidthOnRow = widgetWidth;\n      }\n    }\n\n    indexesToInsertSpacer\n      .reverse()\n      .forEach(x => {\n        this.items.splice(x, 0, this.createSpacer());\n      });\n\n    if (!this.items[this.items.length - 1].spacer) {\n      this.items.push(this.createSpacer());\n    }\n  }\n\n  private toggleOverlay(): void {\n    this.isOverlayDisplayed = !this.isOverlayDisplayed;\n\n    if (this.isOverlayDisplayed) {\n      document.getElementById('overlay').style.display = 'block';\n    } else {\n      document.getElementById('overlay').style.display = 'none';\n    }\n  }\n\n  ngOnInit(): void {\n    const renderedWidgets = this.widgetsService.getRenderedWidgets();\n    this.items = renderedWidgets.map(x => {\n      return { widget: x };\n    });\n    this.addHorizontalSpacers();\n    const availableWidgets = this.widgetsService.getAvailableWidgets();\n    this.library = new Library(renderedWidgets, availableWidgets);\n  }\n\n  onEditLibrary(event: any): void {\n    this.library.edit(event.pageX, event.pageY);\n    this.toggleOverlay();\n  }\n\n  onHideLibrary(): void {\n    this.library.hide();\n    this.toggleOverlay();\n  }\n\n  private clearExistingDropTarget(): void {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].dropTarget) {\n        this.items.splice(i, 1);\n      }\n    }\n  }\n\n  private isWidgetMovingDown(movingWidget, indexOfDrop) {\n    const indexOfWidgetBeforeMove = this.items\n      .map(x => x.widget)\n      .indexOf(movingWidget);\n    return indexOfDrop > indexOfWidgetBeforeMove;\n  }\n\n  private insertDropTarget(currentResident: any, newResident: WidgetComponent) {\n    if (!newResident) {\n      newResident = currentResident;\n    }\n    this.clearExistingDropTarget();\n    const dropTarget = newResident.widget.clone();\n    let indexOfDrop: number;\n\n    if (currentResident instanceof SpacerComponent) {\n      this.bootstrapService.makeFullWidth(dropTarget.makeFullWidth.bind(dropTarget));\n      indexOfDrop = this.items\n        .map(x => x.spacer)\n        .indexOf(currentResident.spacer);\n    } else {\n      indexOfDrop = this.items\n        .map(x => x.widget)\n        .indexOf(currentResident.widget);\n      if (this.isWidgetMovingDown(newResident.widget, indexOfDrop)) {\n        indexOfDrop++;\n      }\n    }\n\n    const height = newResident.getHeightInformation().height;\n    this.items.splice(indexOfDrop, 0, { dropTarget: dropTarget, height: height });\n  }\n\n  onWidgetMove(widgetComponent: WidgetComponent): void {\n    this.movingWidgetComponent = widgetComponent;\n    this.preventHighlightingWhileMoving();\n    this.insertDropTarget(widgetComponent, null);\n  }\n\n  onWidgetDropped(): void {\n    this.items.splice(\n      this.items.map(x => x.widget).indexOf(this.movingWidgetComponent.widget),\n      1);\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].dropTarget) {\n        this.items.splice(i, 1, { widget: this.movingWidgetComponent.widget });\n        break;\n      }\n    }\n    this.allowHighlighting();\n    this.movingWidgetComponent = null;\n    this.addHorizontalSpacers();\n  }\n\n  onWidgetHovered(widgetComponent: WidgetComponent): void {\n    if (!this.movingWidgetComponent) {\n      return;\n    }\n    console.log('test 0', new Date());\n    this.moveHoverSubscription = Observable.of({})\n      .delay(30)\n      .subscribe(() => {\n        console.log('test', new Date());\n        if (!this.movingWidgetComponent) {\n          return;\n        }\n        this.insertDropTarget(widgetComponent, this.movingWidgetComponent);\n        this.addHorizontalSpacers();\n      });\n  }\n\n  onWidgetUnhovered(): void {\n    if (this.moveHoverSubscription) {\n      this.moveHoverSubscription.unsubscribe();\n      this.moveHoverSubscription = null;\n    }\n  }\n\n  onSpacerHovered(spacerComponent: SpacerComponent): void {\n    if (!this.movingWidgetComponent) {\n      return;\n    }\n    this.moveHoverSubscription = Observable.of({})\n      .delay(300)\n      .subscribe(() => {\n        if (!this.movingWidgetComponent) {\n          return;\n        }\n        this.insertDropTarget(spacerComponent, this.movingWidgetComponent);\n        this.addHorizontalSpacers();\n      });\n  }\n\n  onSpacerUnhovered(): void {\n    if (this.moveHoverSubscription) {\n      this.moveHoverSubscription.unsubscribe();\n      this.moveHoverSubscription = null;\n    }\n  }\n\n  private makeGrid() {\n    const grid = [];\n    grid.push([]);\n    let currentRowWidth = 0;\n    const widgets = this.items\n      .filter(x => x.widget)\n      .map(x => x.widget);\n  \n    for (let i = 0; i < widgets.length; i++) {\n      const widget = widgets[i];\n      const width = this.bootstrapService\n        .getWidth(widget.getCurrentWidth.bind(widget));\n      grid[grid.length - 1].push(widget);\n      currentRowWidth += width;\n      const isLastWidget = i === widgets.length - 1;\n      if (isLastWidget) {\n        break;\n      }\n      if (currentRowWidth === this.bootstrapService.maxColumns) {\n        grid.push([]);\n        currentRowWidth = 0;\n      } else {\n        // Preview the next widget and see if a new row is needed due to lack of space.\n        const nextWidget = widgets[i + 1];\n        const nextWidgetWidth = this.bootstrapService\n          .getWidth(nextWidget.getCurrentWidth.bind(nextWidget));\n        const spaceLeftOnCurrentRow = this.bootstrapService.maxColumns - currentRowWidth;\n        if (nextWidgetWidth > spaceLeftOnCurrentRow) {\n          grid.push([]);\n          currentRowWidth = 0;\n        }\n      }\n    }\n  \n    return grid;\n  };\n\n  private findRowContainingWidget(widget: Widget): Widget[] {\n    // I'm making a multi-dimensional array of the entire grid before trying to\n    // find which row the widget is in. This is less efficient than building the\n    // grid and simultaneously checking if the row has the widget, but it makes\n    // the logic much more reasonable.\n    const grid = this.makeGrid();\n    for (let i = 0; i < grid.length; i++) {\n      const widgetIndex = grid[i].indexOf(widget);\n      if (widgetIndex >= 0) {\n        return grid[i];\n      }\n    }\n  };\n\n  private calculateBoundaries(widget: Widget): object {\n    const row = this.findRowContainingWidget(widget);\n    console.log(\"row\", row);\n    const currentPosition = row\n      .slice(0, row.indexOf(widget) + 1)\n      .map(x => this.bootstrapService.getWidth(x.getCurrentWidth.bind(x)))\n      .reduce((x, y) => x + y);\n    const minimumWidth = this.bootstrapService.getWidth(widget.getMinimumWidth.bind(widget));\n    const spaceToMinimize = this.bootstrapService.getWidth(widget.getCurrentWidth.bind(widget)) - minimumWidth;\n    \n    // Don't go left far enough to exceed the minimum of the widget.\n    const left = currentPosition - spaceToMinimize;\n    // Don't go right far enough to exceed the width of the row.\n    const right = this.bootstrapService.maxColumns;\n    // This is used to determine at which column to start drawing guidelines.\n    const offset = minimumWidth - left;\n    return { left, right, offset };\n  }\n\n  private drawResizeGuidelines(widgetComponent: WidgetComponent): void {\n    const heightInformation = widgetComponent.getHeightInformation();\n    const boundaries: any = this.calculateBoundaries(widgetComponent.widget);\n    for (let i = boundaries.left; i <= boundaries.right; i++) {\n      // unshift() which inserts at the beginning of the array instead of push()\n      // because we want to display the longest guideline first so that the shorter\n      // one is on top of the longer one. This will help when we hover over each one.\n      // If the longer one was on top it would be the only guideline raising events.\n      this.resizeGuidelines.unshift({\n        widthOfGuideline: i,\n        targetWidthOfWidget: i + boundaries.offset,\n        top: heightInformation.top,\n        height: heightInformation.height,\n        widget: widgetComponent.widget\n      });\n    }\n  }\n\n  onWidgetResized(widget: Widget): void {\n    const indexOfWidget = this.items\n      .map(x => x.widget)\n      .indexOf(widget);\n    this.items.splice(indexOfWidget, 1, { widget });\n    this.addHorizontalSpacers();\n  }\n\n  private endWidgetResize() {\n    this.resizeGuidelines = [];\n    this.allowHighlighting();\n    if (this.mouseUpSubscription) {\n      this.mouseUpSubscription.unsubscribe();\n    }\n    if (this.touchEndSubscription) {\n      this.touchEndSubscription.unsubscribe();\n    }\n  }\n\n  onWidgetResizeStarted(widgetComponent): void {\n    this.drawResizeGuidelines(widgetComponent);\n    this.preventHighlightingWhileMoving();\n    this.mouseUpSubscription =\n      Observable.fromEvent(this.document, 'mouseup')\n        .subscribe(() => {\n          this.endWidgetResize();\n          if (this.mouseUpSubscription) {\n            this.mouseUpSubscription.unsubscribe();\n          }\n        });\n    this.touchEndSubscription =\n      Observable.fromEvent(this.document, 'touchend')\n        .subscribe(() => {\n          this.endWidgetResize();\n          if (this.touchEndSubscription) {\n            this.touchEndSubscription.unsubscribe();\n          }\n        });\n  }\n\n  onRenderWidget(widget: Widget) {\n    this.items.unshift({ widget });\n    this.addHorizontalSpacers();\n  }\n\n  onDerenderWidget(widget: Widget) {\n    this.items\n      .filter(x => x.widget && x.widget.id === widget.id)\n      .forEach(x => {\n        this.items.splice(this.items.indexOf(x), 1);\n      });\n    this.addHorizontalSpacers();\n  }\n\n  onEditLayout(event) {\n    this.layoutEditor.edit(event.pageX, event.pageY);\n    this.toggleOverlay();\n  }\n\n  onHideLayoutEditor() {\n    this.layoutEditor.hide();\n    this.toggleOverlay();\n  }\n\n  onWidgetCloseClick(widget) {\n    this.items\n      .filter(x => x.widget && x.widget === widget)\n      .forEach(x => {\n        this.items.splice(this.items.indexOf(x), 1);\n      });\n    this.addHorizontalSpacers();\n  }\n\n  onWidgetToggleFullScreenClick() {\n    this.toggleOverlay();\n  }\n\n  ngOnDestroy(): void {\n    if (this.moveHoverSubscription) {\n      this.moveHoverSubscription.unsubscribe();\n    }\n    if (this.mouseUpSubscription) {\n      this.mouseUpSubscription.unsubscribe();\n    }\n    if (this.touchEndSubscription) {\n      this.touchEndSubscription.unsubscribe();\n    }\n  }\n}\n","import { Component, OnInit, Output, ElementRef, EventEmitter, AfterContentInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-widgets-panel-controls',\r\n  template: `<span class='no-highlighting'>\r\n  <span class='material-icons' (click)='onLibraryClick($event)'>add</span>\r\n<span class='material-icons' (click)='onLayoutClick($event)'>dashboard</span>\r\n</span>`,\r\n  styles: [`:host{margin-top:10px;margin-right:20px;text-align:right}`]\r\n})\r\nexport class PanelControlsComponent implements OnInit, AfterContentInit {\r\n  @Output() editLibrary = new EventEmitter<any>();\r\n  @Output() editLayout = new EventEmitter<any>();\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.elementRef.nativeElement.classList.add('col-12');\r\n  }\r\n\r\n  onLibraryClick(event) {\r\n    this.editLibrary.emit(event);\r\n  }\r\n\r\n  onLayoutClick(event) {\r\n    this.editLayout.emit(event);\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  NgZone,\r\n  OnDestroy,\r\n  AfterContentInit,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Widget } from '../widget.model';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/fromEvent';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { BootstrapService } from '../bootstrap.service';\r\n\r\ninterface ICoordinates {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-widget',\r\n  template: `<div class='card card-row' (mouseenter)='onWidgetMouseEnter()' (touchenter)='onWidgetTouchEnter()' (mouseleave)='onWidgetMouseLeave()' (touchleave)='onWidgetTouchLeave()'>\r\n  <app-widget-controls [widget]='widget' (mousedown)='onWidgetMouseDown($event)' (touchstart)='onWidgetTouchStart($event)' (close)='onCloseClick()' (fullscreen)='onToggleFullScreenClick()'></app-widget-controls>\r\n  <div [ngClass]='widget.isExpanded || widget.isFullScreen ? \"maximized\" : \"minimized\"'>\r\n    <div class='container'>\r\n      <div [style.height]='widget.initialHeight'>\r\n        <div class='loader'>Loading...</div>\r\n      </div>\r\n    </div>\r\n    <div class='resizer d-none d-sm-inline' (mousedown)='onResizerMouseDown()' (touchstart)='onResizerTouchStart()'></div>\r\n  </div>\r\n</div>`,\r\n  styles: [`:host{display:block}:host>div{height:100%;margin:0}.resizer{position:absolute;width:5px;height:98%;top:2px;right:2px;cursor:ew-resize}.maximized{opacity:1;transition-property:height,opacity;transition-duration:.2s,.5s}.minimized{opacity:0;transition-property:height,opacity;transition-duration:.5s,0;height:0!important}:host.fullscreen .resizer{cursor:default}:host.fullscreen{z-index:100;max-width:100%;position:absolute}.loader{color:gray;margin:auto;font-size:45px;top:calc(50% - 45px);text-indent:-9999em;overflow:hidden;width:1em;height:1em;border-radius:50%;position:relative;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-animation:1.7s infinite load6,1.7s infinite round;animation:1.7s infinite load6,1.7s infinite round}@-webkit-keyframes load6{0%,100%,5%,95%{box-shadow:0 -.83em 0 -.4em,0 -.83em 0 -.42em,0 -.83em 0 -.44em,0 -.83em 0 -.46em,0 -.83em 0 -.477em}10%,59%{box-shadow:0 -.83em 0 -.4em,-.087em -.825em 0 -.42em,-.173em -.812em 0 -.44em,-.256em -.789em 0 -.46em,-.297em -.775em 0 -.477em}20%{box-shadow:0 -.83em 0 -.4em,-.338em -.758em 0 -.42em,-.555em -.617em 0 -.44em,-.671em -.488em 0 -.46em,-.749em -.34em 0 -.477em}38%{box-shadow:0 -.83em 0 -.4em,-.377em -.74em 0 -.42em,-.645em -.522em 0 -.44em,-.775em -.297em 0 -.46em,-.82em -.09em 0 -.477em}}@keyframes load6{0%,100%,5%,95%{box-shadow:0 -.83em 0 -.4em,0 -.83em 0 -.42em,0 -.83em 0 -.44em,0 -.83em 0 -.46em,0 -.83em 0 -.477em}10%,59%{box-shadow:0 -.83em 0 -.4em,-.087em -.825em 0 -.42em,-.173em -.812em 0 -.44em,-.256em -.789em 0 -.46em,-.297em -.775em 0 -.477em}20%{box-shadow:0 -.83em 0 -.4em,-.338em -.758em 0 -.42em,-.555em -.617em 0 -.44em,-.671em -.488em 0 -.46em,-.749em -.34em 0 -.477em}38%{box-shadow:0 -.83em 0 -.4em,-.377em -.74em 0 -.42em,-.645em -.522em 0 -.44em,-.775em -.297em 0 -.46em,-.82em -.09em 0 -.477em}}@-webkit-keyframes round{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes round{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}`]\r\n})\r\nexport class WidgetComponent implements OnInit, AfterContentInit, AfterViewInit, OnDestroy {\r\n  @Input() widget: Widget;\r\n  @Output() widgetMoving = new EventEmitter<WidgetComponent>();\r\n  @Output() widgetDropped = new EventEmitter<void>();\r\n  @Output() widgetHovered = new EventEmitter<WidgetComponent>();\r\n  @Output() widgetUnhovered = new EventEmitter<void>();\r\n  @Output() resizeStarted = new EventEmitter<WidgetComponent>();\r\n  @Output() close = new EventEmitter<Widget>();\r\n  @Output() fullscreen = new EventEmitter<void>();\r\n\r\n  // All subscriptions must be cleaned up to prevent leaks.\r\n  private mouseMoveSubscription: Subscription;\r\n  private mouseUpSubscription: Subscription;\r\n  private touchMoveSubscription: Subscription;\r\n  private touchEndSubscription: Subscription;\r\n\r\n  private moveStartPosition: ICoordinates;\r\n  private initialPosition: ICoordinates;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document,\r\n    private elementRef: ElementRef,\r\n    private zone: NgZone,\r\n    private bootstrapService: BootstrapService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  private getUserPosition(e): ICoordinates {\r\n    return e.changedTouches ?\r\n      {\r\n        x: e.changedTouches[0].pageX,\r\n        y: e.changedTouches[0].pageY\r\n      } : {\r\n        x: e.pageX,\r\n        y: e.pageY\r\n      };\r\n  }\r\n\r\n  private notModifiable() {\r\n    if (this.widget.isFullScreen) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  private notGrabbable(e) {\r\n    if (this.notModifiable()) {\r\n      return true;\r\n    }\r\n    if (!e) {\r\n      return true;\r\n    }\r\n    const target = e.target || e.srcElement;\r\n    if (!target) {\r\n      return true;\r\n    }\r\n    if (target.classList.contains('not-grabbable')) {\r\n      return true;\r\n    }\r\n    if (target.closest('.not-grabbable')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private startMove(e) {\r\n    this.widgetMoving.emit(this);\r\n\r\n    const thisElement = this.elementRef.nativeElement;\r\n\r\n    // We'll reset the style when we call endMove.\r\n    this.initialPosition = {\r\n      y: thisElement.style.top,\r\n      x: thisElement.style.left\r\n    };\r\n\r\n    // Make the dragging widget follow the user's movement.\r\n    const userPosition = this.getUserPosition(e);\r\n    this.moveStartPosition = {\r\n      x: e.touches ?\r\n        e.touches[0].pageX - thisElement.offsetLeft :\r\n        e.pageX - thisElement.offsetLeft,\r\n      y: e.touches ?\r\n        e.touches[0].pageY - thisElement.offsetTop :\r\n        e.pageY - thisElement.offsetTop\r\n    };\r\n    thisElement.style.left = (userPosition.x - this.moveStartPosition.x) + 'px';\r\n    thisElement.style.top = (userPosition.y - this.moveStartPosition.y) + 'px';\r\n\r\n    thisElement.classList.add('moving-widget');\r\n  }\r\n\r\n  private move(e) {\r\n    // Make the widget follow the user's movement.\r\n    const userPosition = this.getUserPosition(e);\r\n    this.elementRef.nativeElement.style.left = (userPosition.x - this.moveStartPosition.x) + 'px';\r\n    this.elementRef.nativeElement.style.top = (userPosition.y - this.moveStartPosition.y) + 'px';\r\n  }\r\n\r\n  private endMove() {\r\n    this.widgetDropped.emit();\r\n    this.elementRef.nativeElement.classList.remove('moving-widget');\r\n    this.elementRef.nativeElement.style.top = this.initialPosition.y;\r\n    this.elementRef.nativeElement.style.left = this.initialPosition.x;\r\n  }\r\n\r\n  getHeightInformation(): any {\r\n    const rect = this.elementRef.nativeElement\r\n      .getBoundingClientRect();\r\n    return {\r\n      height: rect.height,\r\n      top: rect.top\r\n    };\r\n  }\r\n\r\n  onWidgetMouseDown(e) {\r\n    if (this.notGrabbable(e)) {\r\n      return;\r\n    }\r\n    this.startMove(e);\r\n    // Make sure these observers are removed in endMove.\r\n    this.mouseMoveSubscription =\r\n      Observable.fromEvent(this.document, 'mousemove')\r\n        .subscribe(event => {\r\n          this.zone.runOutsideAngular(() => {\r\n            this.move(event);\r\n          });\r\n        });\r\n    this.mouseUpSubscription =\r\n      Observable.fromEvent(this.document, 'mouseup')\r\n        .subscribe(() => {\r\n          this.endMove();\r\n          if (this.mouseMoveSubscription) {\r\n            this.mouseMoveSubscription.unsubscribe();\r\n          }\r\n          if (this.mouseUpSubscription) {\r\n            this.mouseUpSubscription.unsubscribe();\r\n          }\r\n        });\r\n  }\r\n\r\n  onWidgetTouchStart(e) {\r\n    if (this.notGrabbable(e)) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    this.startMove(e);\r\n    // Make sure these observers are removed in endMove.\r\n    this.touchMoveSubscription =\r\n      Observable.fromEvent(this.document, 'touchmove')\r\n        .subscribe(event => {\r\n          this.zone.runOutsideAngular(() => {\r\n            this.move(event);\r\n          });\r\n        });\r\n    this.touchEndSubscription =\r\n      Observable.fromEvent(this.document, 'touchend')\r\n        .subscribe(() => {\r\n          this.endMove();\r\n          if (this.touchMoveSubscription) {\r\n            this.touchMoveSubscription.unsubscribe();\r\n          }\r\n          if (this.touchEndSubscription) {\r\n            this.touchEndSubscription.unsubscribe();\r\n          }\r\n        });\r\n  }\r\n\r\n  onWidgetMouseEnter() {\r\n    this.widgetHovered.emit(this);\r\n  }\r\n\r\n  onWidgetTouchEnter() {\r\n    this.widgetHovered.emit(this);\r\n  }\r\n\r\n  onWidgetMouseLeave() {\r\n    this.widgetUnhovered.emit();\r\n  }\r\n\r\n  onWidgetTouchLeave() {\r\n    this.widgetUnhovered.emit();\r\n  }\r\n\r\n  onResizerMouseDown() {\r\n    if (this.notModifiable()) {\r\n      return true;\r\n    }\r\n    this.resizeStarted.emit(this);\r\n  }\r\n\r\n  onResizerTouchStart() {\r\n    if (this.notModifiable()) {\r\n      return true;\r\n    }\r\n    this.resizeStarted.emit(this);\r\n  }\r\n\r\n  onCloseClick() {\r\n    this.close.emit(this.widget);\r\n  }\r\n\r\n  onToggleFullScreenClick() {\r\n    this.widget.toggleFullScreen();\r\n    const thisElement = this.elementRef.nativeElement;\r\n    if (this.widget.isFullScreen) {\r\n      thisElement.classList.add('fullscreen');\r\n      // I would prefer to use document.body.scrollTop, but it is broken on\r\n      // chome/webkit and always returns 0.\r\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=157855\r\n      thisElement.style.top = (15 + window.scrollY) + 'px';\r\n      thisElement.style.bottom = (15 - window.scrollY) + 'px';\r\n      thisElement.style.left = (0 + window.scrollX) + 'px';\r\n      thisElement.style.right = (0 - window.scrollX) + 'px';\r\n\r\n    } else {\r\n      thisElement.classList.remove('fullscreen');\r\n      thisElement.style.top = null;\r\n      thisElement.style.bottom = null;\r\n      thisElement.style.left = null;\r\n      thisElement.style.right = null;\r\n    }\r\n    this.fullscreen.emit();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.elementRef.nativeElement.classList.add('widget');\r\n    const classes: string[] = this.bootstrapService.getClasses(this.widget);\r\n    this.elementRef.nativeElement.classList.add(...classes);\r\n    if (this.widget.isHidden) {\r\n      this.elementRef.nativeElement.style.visibility = 'hidden';\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // If the widget is also Angular 2+, it's bootstrapping will cause Zone errors\r\n    // in the console because Zone is loaded as a singleton. Fun. Run outside Angular.\r\n    this.zone.runOutsideAngular(() => {\r\n      const container = this.elementRef.nativeElement.querySelector('.container');\r\n      this.widget.render(container)\r\n        .then(() => {\r\n          // Remove the spinner.\r\n          container.children[0].remove();\r\n        })\r\n        .catch(error => console.log(error));\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.mouseMoveSubscription) {\r\n      this.mouseMoveSubscription.unsubscribe();\r\n    }\r\n    if (this.mouseUpSubscription) {\r\n      this.mouseUpSubscription.unsubscribe();\r\n    }\r\n    if (this.touchMoveSubscription) {\r\n      this.touchMoveSubscription.unsubscribe();\r\n    }\r\n    if (this.touchEndSubscription) {\r\n      this.touchEndSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, AfterContentInit, AfterViewInit } from '@angular/core';\r\nimport { Widget } from '../widget.model';\r\n\r\n@Component({\r\n  selector: 'app-widget-controls',\r\n  template: `<div>\r\n  <div class='title'>{{widget.title}}</div>\r\n  <div *ngIf='!widget.isFullScreen; else fullscreen' class='buttons no-highlighting not-grabbable'>\r\n    <span *ngIf='widget.isExpanded; else expand' class='material-icons' (click)='onCollapseClick()'>expand_less</span>\r\n    <ng-template #expand>\r\n      <span class='material-icons' (click)='onExpandClick()'>expand_more</span>\r\n    </ng-template>\r\n    <span class='material-icons d-none d-sm-inline' (click)='onToggleFullScreenClick()'>fullscreen</span>\r\n    <span class='material-icons' (click)='onCloseClick()'>close</span>\r\n  </div>\r\n  <ng-template #fullscreen>\r\n    <div class='material-icons buttons no-highlighting not-grabbable' (click)='onToggleFullScreenClick()'>fullscreen_exit</div>\r\n  </ng-template>\r\n</div>`,\r\n  styles: [`:host{display:block;cursor:-webkit-grab;cursor:grab;overflow:hidden;margin-bottom:15px}:host>div>.title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host>div>div:first-of-type{float:left}:host>div>div:last-of-type{float:right;cursor:default}.fullscreen :host{cursor:default}`]\r\n})\r\nexport class WidgetControlsComponent implements OnInit, AfterContentInit, AfterViewInit {\r\n  @Input() widget: Widget;\r\n  @Output() close = new EventEmitter<void>();\r\n  @Output() fullscreen = new EventEmitter<void>();\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.elementRef.nativeElement.classList.add('col-12');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // We'll set the width of the title based on the width left by the buttons.\r\n    // This will make the overflow on the title work properly. But we won't\r\n    // do this until the stack is empty. Without the setTime, the first page load\r\n    // after a Hard Reload does not calculate the offsetWidths correctly.\r\n    setTimeout(() => {\r\n      const containerElement = this.elementRef.nativeElement.children[0];\r\n      const controlsWidth = containerElement.offsetWidth;\r\n      const buttonsElement = containerElement.querySelector('.buttons');\r\n      const buttonsWidth = buttonsElement.offsetWidth;\r\n      const padding = 8;\r\n      const titleElement = containerElement.querySelector('.title');\r\n      titleElement.style.width = (100 - padding - (buttonsWidth / controlsWidth * 100)) + '%';  \r\n    }, 0);\r\n  }\r\n\r\n  onCollapseClick() {\r\n    this.widget.collapse();\r\n  }\r\n\r\n  onExpandClick() {\r\n    this.widget.expand();\r\n  }\r\n\r\n  onCloseClick() {\r\n    this.close.emit();\r\n  }\r\n\r\n  onToggleFullScreenClick() {\r\n    this.fullscreen.emit();\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, ElementRef, EventEmitter, AfterViewInit, AfterContentInit } from '@angular/core';\r\nimport { Library } from '../library.model';\r\nimport { Widget } from '../widget.model';\r\n\r\n@Component({\r\n  selector: 'app-widgets-library',\r\n  template: `<div class='title'>Library</div>\r\n<ul class='list-group'>\r\n  <li *ngFor='let libraryWidget of library.widgets' class='list-group-item'>\r\n    <span>{{libraryWidget.widget.title}}</span>\r\n    <!-- <span *ngIf='libraryWidget.isRendered; else not' class='material-icons' (click)='onRemoveWidget(libraryWidget.widget)'>remove_circle_outline</span>\r\n    <ng-template #not>\r\n      <span class='material-icons' (click)='onAddWidget(libraryWidget.widget)'>add_circle_outline</span>\r\n    </ng-template> -->\r\n    <!-- <div class='pretty p-switch p-fill'>\r\n      <input id='libraryWidget.widget.id' type='checkbox' [checked]='libraryWidget.isRendered' (change)='onCheckboxChange(libraryWidget)' />\r\n    </div> -->\r\n    <span class='pretty p-switch p-fill'>\r\n      <input type='checkbox' [checked]='libraryWidget.isRendered' (change)='onCheckboxChange(libraryWidget)' />\r\n      <div class='state p-success'>\r\n        <label></label>\r\n      </div>\r\n    </span>\r\n  </li>\r\n</ul>\r\n<div class='button-container'>\r\n  <button class='btn btn-primary' (click)='onDoneClick()'>Done</button>\r\n</div>`,\r\n  styles: [`:host{position:absolute;z-index:100;background:#fff}ul{list-style:none;padding:0;margin-bottom:20px}ul>li{overflow:hidden;text-overflow:ellipsis}ul>li>span:first-of-type{float:left;margin-right:30px}ul>li>span:last-of-type{float:right;margin-top:5px}label:after{margin-top:-1px}.pretty input{width:200%}`]\r\n})\r\nexport class LibraryComponent implements OnInit, AfterContentInit, AfterViewInit {\r\n  @Input() library: Library;\r\n  @Output() done = new EventEmitter<void>();\r\n  @Output() renderWidget = new EventEmitter<Widget>();\r\n  @Output() derenderWidget = new EventEmitter<Widget>();\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngAfterContentInit() {\r\n    this.elementRef.nativeElement.classList.add('card', 'card-row', 'popup');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const width = this.elementRef.nativeElement\r\n      .getBoundingClientRect()\r\n      .width;\r\n    this.elementRef.nativeElement.style.top = (this.library.yPosition - 20) + 'px';\r\n    this.elementRef.nativeElement.style.left = (this.library.xPosition - width + 20) + 'px';\r\n  }\r\n\r\n  onDoneClick(): void {\r\n    this.done.emit();\r\n  }\r\n\r\n  onCheckboxChange(libraryWidget: any) {\r\n    if (libraryWidget.isRendered) {\r\n      this.library.derenderWidget(libraryWidget.widget);\r\n      this.derenderWidget.emit(libraryWidget.widget);\r\n    } else {\r\n      this.library.renderWidget(libraryWidget.widget);\r\n      this.renderWidget.emit(libraryWidget.widget);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, ElementRef, AfterContentInit } from '@angular/core';\r\nimport { Widget } from '../widget.model';\r\nimport { BootstrapService } from '../bootstrap.service';\r\n\r\n@Component({\r\n  selector: 'app-widget-drop-target',\r\n  template: `<div class='card card-row'></div>`,\r\n  styles: [`:host>div{background:#d3d3d3;height:100%;margin:0}`]\r\n})\r\nexport class DropTargetComponent implements OnInit, AfterContentInit {\r\n  @Input() dropTarget: Widget;\r\n  @Input() height: number;\r\n\r\n  constructor(private elementRef: ElementRef, private bootstrapService: BootstrapService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.elementRef.nativeElement.style.height = this.height + 'px';\r\n    const classes: string[] = this.bootstrapService.getClasses(this.dropTarget);\r\n    this.elementRef.nativeElement.classList.add(...classes);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, AfterContentInit } from '@angular/core';\r\nimport { BootstrapService } from '../bootstrap.service';\r\n\r\n@Component({\r\n  selector: 'app-widget-resize-guideline',\r\n  template: `<div (mouseenter)='onHover()' (touchenter)='onHover()'></div>`,\r\n  styles: [`:host{position:absolute}:host>div{border-right:1px dotted green;height:100%}`]\r\n})\r\nexport class ResizeGuidelineComponent implements OnInit, AfterContentInit {\r\n  @Input() guideline: any;\r\n  @Output() resized = new EventEmitter<any>();\r\n\r\n  constructor(private elementRef: ElementRef, private bootstrapService: BootstrapService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  ngAfterContentInit(): void {\r\n    const thisElement = this.elementRef.nativeElement;\r\n    thisElement.classList.add(this.bootstrapService.columnPrefix + this.guideline.widthOfGuideline);\r\n    thisElement.style.top = (this.guideline.top + window.scrollY) + 'px';\r\n    thisElement.style.height = this.guideline.height + 'px';\r\n  }\r\n\r\n  onHover(): void {\r\n    const widget = this.guideline.widget;\r\n    if (this.guideline.targetWidthOfWidget !== this.bootstrapService.getWidth(widget.getCurrentWidth.bind(widget))) {\r\n      this.bootstrapService.resize(this.guideline.widget, this.guideline.targetWidthOfWidget);\r\n      this.resized.emit(this.guideline.widget);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, AfterViewInit, AfterContentInit } from '@angular/core';\r\nimport { LayoutEditor } from '../layout-editor.model';\r\n\r\n@Component({\r\n  selector: 'app-widgets-layout-editor',\r\n  template: `<div class='title'>Layout Editor</div>\r\n<p>\r\n  <b>Coming Soon!</b>\r\n</p>\r\n<p>\r\n  This will allow some users to edit pages and make custom layouts targeted for specific roles in your organization.\r\n</p>\r\n<p>\r\n  For now, changes made will not be saved.\r\n</p>\r\n<div class='button-container'>\r\n  <button class='btn btn-primary' (click)='onDoneClick()'>Done</button>\r\n</div>`,\r\n  styles: [`:host{position:absolute;z-index:100;background:#fff}`]\r\n})\r\nexport class LayoutEditorComponent implements OnInit, AfterContentInit, AfterViewInit {\r\n  @Input() layoutEditor: LayoutEditor;\r\n  @Output() done = new EventEmitter<void>();\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngAfterContentInit() {\r\n    this.elementRef.nativeElement.classList.add('card', 'card-row', 'col-8', 'col-sm-6', 'popup');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const width = this.elementRef.nativeElement\r\n      .getBoundingClientRect()\r\n      .width;\r\n    this.elementRef.nativeElement.style.top = (this.layoutEditor.yPosition - 20) + 'px';\r\n    this.elementRef.nativeElement.style.left = (this.layoutEditor.xPosition - width + 20) + 'px';\r\n  }\r\n\r\n  onDoneClick(): void {\r\n    this.done.emit();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { BootstrapService } from './widgets/bootstrap.service';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { PanelComponent } from './widgets/panel/panel.component';\r\nimport { PanelControlsComponent } from './widgets/panel-controls/panel-controls.component';\r\nimport { SpacerComponent } from './widgets/spacer/spacer.component';\r\nimport { WidgetComponent } from './widgets/widget/widget.component';\r\nimport { WidgetControlsComponent } from './widgets/widget-controls/widget-controls.component';\r\nimport { LibraryComponent } from './widgets/library/library.component';\r\nimport { DropTargetComponent } from './widgets/drop-target/drop-target.component';\r\nimport { ResizeGuidelineComponent } from './widgets/resize-guideline/resize-guideline.component';\r\nimport { LayoutEditorComponent } from './widgets/layout-editor/layout-editor.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    PanelComponent,\r\n    SpacerComponent,\r\n    PanelControlsComponent,\r\n    WidgetComponent,\r\n    WidgetControlsComponent,\r\n    LibraryComponent,\r\n    DropTargetComponent,\r\n    ResizeGuidelineComponent,\r\n    LayoutEditorComponent\r\n  ],\r\n  imports: [BrowserModule],\r\n  exports: [\r\n    DashboardComponent,\r\n    PanelComponent,\r\n    SpacerComponent,\r\n    PanelControlsComponent,\r\n    WidgetComponent,\r\n    WidgetControlsComponent,\r\n    LibraryComponent,\r\n    DropTargetComponent,\r\n    ResizeGuidelineComponent,\r\n    LayoutEditorComponent\r\n  ],\r\n  providers: [BootstrapService],\r\n  bootstrap: [DashboardComponent]\r\n})\r\nexport class DashboardModule {\r\n  static forRoot(WidgetsService): ModuleWithProviders {\r\n    return {\r\n      ngModule: DashboardModule,\r\n      providers: [\r\n        { provide: 'widgetsService', useClass: WidgetsService }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","export type RenderFunc = (HtmlElement) => Promise<void>;\r\n\r\nexport interface IWidth {\r\n  xs: number;\r\n  sm?: number;\r\n  md?: number;\r\n  lg?: number;\r\n  xl?: number;\r\n}\r\n\r\nexport class Widget {\r\n  id: string;\r\n  title: string;\r\n  initialHeight: string;\r\n  render: RenderFunc;\r\n  isHidden: boolean;\r\n  isExpanded = true;\r\n  isFullScreen = false;\r\n\r\n  private constructor(\r\n    id: string,\r\n    title: string,\r\n    private currentWidth: IWidth,\r\n    private readonly minimumWidth: IWidth,\r\n    initialHeight: string,\r\n    render: RenderFunc,\r\n    isHidden: boolean) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.initialHeight = initialHeight;\r\n    this.render = (render as any).bind(this);\r\n    this.isHidden = isHidden;\r\n    this.currentWidth = currentWidth;\r\n\r\n    // This uses Object.assign to create a new object from the one passed in.\r\n    // This is to prevent the instantiator from passing in one object to both\r\n    // currentWidth and minimumWidth and then having that object ref assigned\r\n    // to both properties. If that were to happen, then updating the\r\n    // currentWidth would also update the minimumWidth. The minimumWidth\r\n    // should never be changed once set.\r\n    this.minimumWidth = Object.assign({}, minimumWidth);\r\n    Object.freeze(this.minimumWidth);\r\n  }\r\n\r\n  static createAvailableWidget({ id, title, width, initialHeight, render }) {\r\n    return new Widget(id, title, width, width, initialHeight, render, false);\r\n  }\r\n\r\n  static createRenderedWidget({ id, title, currentWidth, minimumWidth, initialHeight, render }) {\r\n    return new Widget(id, title, currentWidth, minimumWidth, initialHeight, render, false);\r\n  }\r\n\r\n  getCurrentWidth(breakpoint: string) {\r\n    return this.currentWidth[breakpoint];\r\n  }\r\n\r\n  getCurrentWidths() {\r\n    return this.currentWidth;\r\n  }\r\n\r\n  getMinimumWidth(breakpoint: string) {\r\n    return this.minimumWidth[breakpoint];\r\n  }\r\n\r\n  makeFullWidth(breakpoint: string, width: number) {\r\n    if (this.currentWidth[breakpoint]) {\r\n      this.currentWidth[breakpoint] = width;\r\n    }\r\n  }\r\n\r\n  resize(breakpoint: string, width: number): void {\r\n    this.currentWidth[breakpoint] = width;\r\n  }\r\n\r\n  expand(): void {\r\n    this.isExpanded = true;\r\n  }\r\n\r\n  collapse(): void {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggleFullScreen(): void {\r\n    this.isFullScreen = !this.isFullScreen;\r\n  }\r\n\r\n  clone(): Widget {\r\n    return new Widget(\r\n      this.id,\r\n      this.title,\r\n      this.currentWidth,\r\n      this.minimumWidth,\r\n      this.initialHeight,\r\n      this.render,\r\n      this.isHidden);\r\n  }\r\n}\r\n"]}