/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { BootstrapService } from './widgets/bootstrap.service';
import { DashboardComponent } from './dashboard.component';
import { PanelComponent } from './widgets/panel/panel.component';
import { PanelControlsComponent } from './widgets/panel-controls/panel-controls.component';
import { SpacerComponent } from './widgets/spacer/spacer.component';
import { WidgetComponent } from './widgets/widget/widget.component';
import { WidgetControlsComponent } from './widgets/widget-controls/widget-controls.component';
import { LibraryComponent } from './widgets/library/library.component';
import { DropTargetComponent } from './widgets/drop-target/drop-target.component';
import { ResizeGuidelineComponent } from './widgets/resize-guideline/resize-guideline.component';
import { LayoutEditorComponent } from './widgets/layout-editor/layout-editor.component';
export class DashboardModule {
    /**
     * @param {?} WidgetsService
     * @return {?}
     */
    static forRoot(WidgetsService) {
        return {
            ngModule: DashboardModule,
            providers: [
                { provide: 'widgetsService', useClass: WidgetsService }
            ]
        };
    }
}
DashboardModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    DashboardComponent,
                    PanelComponent,
                    SpacerComponent,
                    PanelControlsComponent,
                    WidgetComponent,
                    WidgetControlsComponent,
                    LibraryComponent,
                    DropTargetComponent,
                    ResizeGuidelineComponent,
                    LayoutEditorComponent
                ],
                imports: [BrowserModule],
                exports: [
                    DashboardComponent,
                    PanelComponent,
                    SpacerComponent,
                    PanelControlsComponent,
                    WidgetComponent,
                    WidgetControlsComponent,
                    LibraryComponent,
                    DropTargetComponent,
                    ResizeGuidelineComponent,
                    LayoutEditorComponent
                ],
                providers: [BootstrapService],
                bootstrap: [DashboardComponent]
            },] },
];
function DashboardModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    DashboardModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    DashboardModule.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFzaGJvYXJkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuYXZpaGVhbHRoL3dpZGdldC1kYXNoYm9hcmQtbmc1LyIsInNvdXJjZXMiOlsic3JjL2Rhc2hib2FyZC9kYXNoYm9hcmQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFL0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzNGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDcEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0scURBQXFELENBQUM7QUFDOUYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDdkUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDbEYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFDakcsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saURBQWlELENBQUM7QUErQnhGLE1BQU07Ozs7O0lBQ0osTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjO1FBQzNCLE1BQU0sQ0FBQztZQUNMLFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFNBQVMsRUFBRTtnQkFDVCxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFO2FBQ3hEO1NBQ0YsQ0FBQztLQUNIOzs7WUFyQ0YsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWixrQkFBa0I7b0JBQ2xCLGNBQWM7b0JBQ2QsZUFBZTtvQkFDZixzQkFBc0I7b0JBQ3RCLGVBQWU7b0JBQ2YsdUJBQXVCO29CQUN2QixnQkFBZ0I7b0JBQ2hCLG1CQUFtQjtvQkFDbkIsd0JBQXdCO29CQUN4QixxQkFBcUI7aUJBQ3RCO2dCQUNELE9BQU8sRUFBRSxDQUFDLGFBQWEsQ0FBQztnQkFDeEIsT0FBTyxFQUFFO29CQUNQLGtCQUFrQjtvQkFDbEIsY0FBYztvQkFDZCxlQUFlO29CQUNmLHNCQUFzQjtvQkFDdEIsZUFBZTtvQkFDZix1QkFBdUI7b0JBQ3ZCLGdCQUFnQjtvQkFDaEIsbUJBQW1CO29CQUNuQix3QkFBd0I7b0JBQ3hCLHFCQUFxQjtpQkFDdEI7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7Z0JBQzdCLFNBQVMsRUFBRSxDQUFDLGtCQUFrQixDQUFDO2FBQ2hDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnJvd3Nlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xyXG5pbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgQm9vdHN0cmFwU2VydmljZSB9IGZyb20gJy4vd2lkZ2V0cy9ib290c3RyYXAuc2VydmljZSc7XHJcblxyXG5pbXBvcnQgeyBEYXNoYm9hcmRDb21wb25lbnQgfSBmcm9tICcuL2Rhc2hib2FyZC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQYW5lbENvbXBvbmVudCB9IGZyb20gJy4vd2lkZ2V0cy9wYW5lbC9wYW5lbC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQYW5lbENvbnRyb2xzQ29tcG9uZW50IH0gZnJvbSAnLi93aWRnZXRzL3BhbmVsLWNvbnRyb2xzL3BhbmVsLWNvbnRyb2xzLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNwYWNlckNvbXBvbmVudCB9IGZyb20gJy4vd2lkZ2V0cy9zcGFjZXIvc3BhY2VyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFdpZGdldENvbXBvbmVudCB9IGZyb20gJy4vd2lkZ2V0cy93aWRnZXQvd2lkZ2V0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFdpZGdldENvbnRyb2xzQ29tcG9uZW50IH0gZnJvbSAnLi93aWRnZXRzL3dpZGdldC1jb250cm9scy93aWRnZXQtY29udHJvbHMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTGlicmFyeUNvbXBvbmVudCB9IGZyb20gJy4vd2lkZ2V0cy9saWJyYXJ5L2xpYnJhcnkuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRHJvcFRhcmdldENvbXBvbmVudCB9IGZyb20gJy4vd2lkZ2V0cy9kcm9wLXRhcmdldC9kcm9wLXRhcmdldC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBSZXNpemVHdWlkZWxpbmVDb21wb25lbnQgfSBmcm9tICcuL3dpZGdldHMvcmVzaXplLWd1aWRlbGluZS9yZXNpemUtZ3VpZGVsaW5lLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExheW91dEVkaXRvckNvbXBvbmVudCB9IGZyb20gJy4vd2lkZ2V0cy9sYXlvdXQtZWRpdG9yL2xheW91dC1lZGl0b3IuY29tcG9uZW50JztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBEYXNoYm9hcmRDb21wb25lbnQsXHJcbiAgICBQYW5lbENvbXBvbmVudCxcclxuICAgIFNwYWNlckNvbXBvbmVudCxcclxuICAgIFBhbmVsQ29udHJvbHNDb21wb25lbnQsXHJcbiAgICBXaWRnZXRDb21wb25lbnQsXHJcbiAgICBXaWRnZXRDb250cm9sc0NvbXBvbmVudCxcclxuICAgIExpYnJhcnlDb21wb25lbnQsXHJcbiAgICBEcm9wVGFyZ2V0Q29tcG9uZW50LFxyXG4gICAgUmVzaXplR3VpZGVsaW5lQ29tcG9uZW50LFxyXG4gICAgTGF5b3V0RWRpdG9yQ29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbQnJvd3Nlck1vZHVsZV0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgRGFzaGJvYXJkQ29tcG9uZW50LFxyXG4gICAgUGFuZWxDb21wb25lbnQsXHJcbiAgICBTcGFjZXJDb21wb25lbnQsXHJcbiAgICBQYW5lbENvbnRyb2xzQ29tcG9uZW50LFxyXG4gICAgV2lkZ2V0Q29tcG9uZW50LFxyXG4gICAgV2lkZ2V0Q29udHJvbHNDb21wb25lbnQsXHJcbiAgICBMaWJyYXJ5Q29tcG9uZW50LFxyXG4gICAgRHJvcFRhcmdldENvbXBvbmVudCxcclxuICAgIFJlc2l6ZUd1aWRlbGluZUNvbXBvbmVudCxcclxuICAgIExheW91dEVkaXRvckNvbXBvbmVudFxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbQm9vdHN0cmFwU2VydmljZV0sXHJcbiAgYm9vdHN0cmFwOiBbRGFzaGJvYXJkQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGFzaGJvYXJkTW9kdWxlIHtcclxuICBzdGF0aWMgZm9yUm9vdChXaWRnZXRzU2VydmljZSk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IERhc2hib2FyZE1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgeyBwcm92aWRlOiAnd2lkZ2V0c1NlcnZpY2UnLCB1c2VDbGFzczogV2lkZ2V0c1NlcnZpY2UgfVxyXG4gICAgICBdXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG4iXX0=