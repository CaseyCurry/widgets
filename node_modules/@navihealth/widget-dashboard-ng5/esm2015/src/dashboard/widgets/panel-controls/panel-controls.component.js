/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Output, ElementRef, EventEmitter } from '@angular/core';
export class PanelControlsComponent {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.editLibrary = new EventEmitter();
        this.editLayout = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.elementRef.nativeElement.classList.add('col-12');
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onLibraryClick(event) {
        this.editLibrary.emit(event);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onLayoutClick(event) {
        this.editLayout.emit(event);
    }
}
PanelControlsComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-widgets-panel-controls',
                template: `<span class='no-highlighting'>
  <span class='material-icons' (click)='onLibraryClick($event)'>add</span>
<span class='material-icons' (click)='onLayoutClick($event)'>dashboard</span>
</span>`,
                styles: [`:host{margin-top:10px;margin-right:20px;text-align:right}`]
            },] },
];
/** @nocollapse */
PanelControlsComponent.ctorParameters = () => [
    { type: ElementRef, },
];
PanelControlsComponent.propDecorators = {
    "editLibrary": [{ type: Output },],
    "editLayout": [{ type: Output },],
};
function PanelControlsComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    PanelControlsComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    PanelControlsComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    PanelControlsComponent.propDecorators;
    /** @type {?} */
    PanelControlsComponent.prototype.editLibrary;
    /** @type {?} */
    PanelControlsComponent.prototype.editLayout;
    /** @type {?} */
    PanelControlsComponent.prototype.elementRef;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFuZWwtY29udHJvbHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5hdmloZWFsdGgvd2lkZ2V0LWRhc2hib2FyZC1uZzUvIiwic291cmNlcyI6WyJzcmMvZGFzaGJvYXJkL3dpZGdldHMvcGFuZWwtY29udHJvbHMvcGFuZWwtY29udHJvbHMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFvQixNQUFNLGVBQWUsQ0FBQztBQVV0RyxNQUFNOzs7O0lBSUosWUFBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTsyQkFIbEIsSUFBSSxZQUFZLEVBQU87MEJBQ3hCLElBQUksWUFBWSxFQUFPO0tBRUM7Ozs7SUFFL0MsUUFBUTtLQUNQOzs7O0lBRUQsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDdkQ7Ozs7O0lBRUQsY0FBYyxDQUFDLEtBQUs7UUFDbEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDOUI7Ozs7O0lBRUQsYUFBYSxDQUFDLEtBQUs7UUFDakIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDN0I7OztZQTNCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtnQkFDdEMsUUFBUSxFQUFFOzs7UUFHSjtnQkFDTixNQUFNLEVBQUUsQ0FBQywyREFBMkQsQ0FBQzthQUN0RTs7OztZQVRtQyxVQUFVOzs7NEJBVzNDLE1BQU07MkJBQ04sTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBPdXRwdXQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgQWZ0ZXJDb250ZW50SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcHAtd2lkZ2V0cy1wYW5lbC1jb250cm9scycsXHJcbiAgdGVtcGxhdGU6IGA8c3BhbiBjbGFzcz0nbm8taGlnaGxpZ2h0aW5nJz5cclxuICA8c3BhbiBjbGFzcz0nbWF0ZXJpYWwtaWNvbnMnIChjbGljayk9J29uTGlicmFyeUNsaWNrKCRldmVudCknPmFkZDwvc3Bhbj5cclxuPHNwYW4gY2xhc3M9J21hdGVyaWFsLWljb25zJyAoY2xpY2spPSdvbkxheW91dENsaWNrKCRldmVudCknPmRhc2hib2FyZDwvc3Bhbj5cclxuPC9zcGFuPmAsXHJcbiAgc3R5bGVzOiBbYDpob3N0e21hcmdpbi10b3A6MTBweDttYXJnaW4tcmlnaHQ6MjBweDt0ZXh0LWFsaWduOnJpZ2h0fWBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQYW5lbENvbnRyb2xzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlckNvbnRlbnRJbml0IHtcclxuICBAT3V0cHV0KCkgZWRpdExpYnJhcnkgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICBAT3V0cHV0KCkgZWRpdExheW91dCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcclxuICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2NvbC0xMicpO1xyXG4gIH1cclxuXHJcbiAgb25MaWJyYXJ5Q2xpY2soZXZlbnQpIHtcclxuICAgIHRoaXMuZWRpdExpYnJhcnkuZW1pdChldmVudCk7XHJcbiAgfVxyXG5cclxuICBvbkxheW91dENsaWNrKGV2ZW50KSB7XHJcbiAgICB0aGlzLmVkaXRMYXlvdXQuZW1pdChldmVudCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==