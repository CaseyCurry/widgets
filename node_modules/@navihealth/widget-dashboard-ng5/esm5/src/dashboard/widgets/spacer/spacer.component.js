/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, ElementRef, Input, Output, EventEmitter } from '@angular/core';
var SpacerComponent = /** @class */ (function () {
    function SpacerComponent(elementRef) {
        this.elementRef = elementRef;
        this.spacerHovered = new EventEmitter();
        this.spacerUnhovered = new EventEmitter();
    }
    /**
     * @return {?}
     */
    SpacerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    SpacerComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.elementRef.nativeElement.classList.add('col-12');
    };
    /**
     * @return {?}
     */
    SpacerComponent.prototype.onMouseEnter = /**
     * @return {?}
     */
    function () {
        this.spacerHovered.emit(this);
    };
    /**
     * @return {?}
     */
    SpacerComponent.prototype.onTouchEnter = /**
     * @return {?}
     */
    function () {
        this.spacerHovered.emit(this);
    };
    /**
     * @return {?}
     */
    SpacerComponent.prototype.onMouseLeave = /**
     * @return {?}
     */
    function () {
        this.spacerUnhovered.emit();
    };
    /**
     * @return {?}
     */
    SpacerComponent.prototype.onTouchLeave = /**
     * @return {?}
     */
    function () {
        this.spacerUnhovered.emit();
    };
    SpacerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-widgets-panel-spacer',
                    template: "<div (mouseenter)='onMouseEnter()' (touchenter)='onTouchEnter()' (mouseleave)='onMouseLeave()' (touchleave)='onTouchLeave()'>\n</div>",
                    styles: [":host{height:30px}:host>div{height:100%}"]
                },] },
    ];
    /** @nocollapse */
    SpacerComponent.ctorParameters = function () { return [
        { type: ElementRef, },
    ]; };
    SpacerComponent.propDecorators = {
        "spacer": [{ type: Input },],
        "spacerHovered": [{ type: Output },],
        "spacerUnhovered": [{ type: Output },],
    };
    return SpacerComponent;
}());
export { SpacerComponent };
function SpacerComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    SpacerComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    SpacerComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    SpacerComponent.propDecorators;
    /** @type {?} */
    SpacerComponent.prototype.spacer;
    /** @type {?} */
    SpacerComponent.prototype.spacerHovered;
    /** @type {?} */
    SpacerComponent.prototype.spacerUnhovered;
    /** @type {?} */
    SpacerComponent.prototype.elementRef;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BhY2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuYXZpaGVhbHRoL3dpZGdldC1kYXNoYm9hcmQtbmc1LyIsInNvdXJjZXMiOlsic3JjL2Rhc2hib2FyZC93aWRnZXRzL3NwYWNlci9zcGFjZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBb0IsTUFBTSxlQUFlLENBQUM7O0lBYTNHLHlCQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZOzZCQUhoQixJQUFJLFlBQVksRUFBbUI7K0JBQ2pDLElBQUksWUFBWSxFQUFRO0tBRUw7Ozs7SUFFL0Msa0NBQVE7OztJQUFSLGVBQWM7Ozs7SUFFZCw0Q0FBa0I7OztJQUFsQjtRQUNFLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDdkQ7Ozs7SUFFRCxzQ0FBWTs7O0lBQVo7UUFDRSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUMvQjs7OztJQUVELHNDQUFZOzs7SUFBWjtRQUNFLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQy9COzs7O0lBRUQsc0NBQVk7OztJQUFaO1FBQ0UsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztLQUM3Qjs7OztJQUVELHNDQUFZOzs7SUFBWjtRQUNFLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFLENBQUM7S0FDN0I7O2dCQWpDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsUUFBUSxFQUFFLHVJQUNMO29CQUNMLE1BQU0sRUFBRSxDQUFDLDBDQUEwQyxDQUFDO2lCQUNyRDs7OztnQkFQMkIsVUFBVTs7OzJCQVNuQyxLQUFLO2tDQUNMLE1BQU07b0NBQ04sTUFBTTs7MEJBWFQ7O1NBUWEsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBFbGVtZW50UmVmLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXBwLXdpZGdldHMtcGFuZWwtc3BhY2VyJyxcclxuICB0ZW1wbGF0ZTogYDxkaXYgKG1vdXNlZW50ZXIpPSdvbk1vdXNlRW50ZXIoKScgKHRvdWNoZW50ZXIpPSdvblRvdWNoRW50ZXIoKScgKG1vdXNlbGVhdmUpPSdvbk1vdXNlTGVhdmUoKScgKHRvdWNobGVhdmUpPSdvblRvdWNoTGVhdmUoKSc+XHJcbjwvZGl2PmAsXHJcbiAgc3R5bGVzOiBbYDpob3N0e2hlaWdodDozMHB4fTpob3N0PmRpdntoZWlnaHQ6MTAwJX1gXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU3BhY2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlckNvbnRlbnRJbml0IHtcclxuICBASW5wdXQoKSBzcGFjZXI6IG9iamVjdDtcclxuICBAT3V0cHV0KCkgc3BhY2VySG92ZXJlZCA9IG5ldyBFdmVudEVtaXR0ZXI8U3BhY2VyQ29tcG9uZW50PigpO1xyXG4gIEBPdXRwdXQoKSBzcGFjZXJVbmhvdmVyZWQgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkgeyB9XHJcblxyXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcclxuICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2NvbC0xMicpO1xyXG4gIH1cclxuXHJcbiAgb25Nb3VzZUVudGVyKCkge1xyXG4gICAgdGhpcy5zcGFjZXJIb3ZlcmVkLmVtaXQodGhpcyk7XHJcbiAgfVxyXG5cclxuICBvblRvdWNoRW50ZXIoKSB7XHJcbiAgICB0aGlzLnNwYWNlckhvdmVyZWQuZW1pdCh0aGlzKTtcclxuICB9XHJcblxyXG4gIG9uTW91c2VMZWF2ZSgpIHtcclxuICAgIHRoaXMuc3BhY2VyVW5ob3ZlcmVkLmVtaXQoKTtcclxuICB9XHJcblxyXG4gIG9uVG91Y2hMZWF2ZSgpIHtcclxuICAgIHRoaXMuc3BhY2VyVW5ob3ZlcmVkLmVtaXQoKTtcclxuICB9XHJcbn1cclxuIl19