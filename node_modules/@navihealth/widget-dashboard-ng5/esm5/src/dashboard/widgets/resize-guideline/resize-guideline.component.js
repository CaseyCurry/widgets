/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ElementRef } from '@angular/core';
import { BootstrapService } from '../bootstrap.service';
var ResizeGuidelineComponent = /** @class */ (function () {
    function ResizeGuidelineComponent(elementRef, bootstrapService) {
        this.elementRef = elementRef;
        this.bootstrapService = bootstrapService;
        this.resized = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ResizeGuidelineComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    ResizeGuidelineComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ thisElement = this.elementRef.nativeElement;
        thisElement.classList.add(this.bootstrapService.columnPrefix + this.guideline.widthOfGuideline);
        thisElement.style.top = (this.guideline.top + window.scrollY) + 'px';
        thisElement.style.height = this.guideline.height + 'px';
    };
    /**
     * @return {?}
     */
    ResizeGuidelineComponent.prototype.onHover = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ widget = this.guideline.widget;
        if (this.guideline.targetWidthOfWidget !== this.bootstrapService.getWidth(widget.getCurrentWidth.bind(widget))) {
            this.bootstrapService.resize(this.guideline.widget, this.guideline.targetWidthOfWidget);
            this.resized.emit(this.guideline.widget);
        }
    };
    ResizeGuidelineComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-widget-resize-guideline',
                    template: "<div (mouseenter)='onHover()' (touchenter)='onHover()'></div>",
                    styles: [":host{position:absolute}:host>div{border-right:1px dotted green;height:100%}"]
                },] },
    ];
    /** @nocollapse */
    ResizeGuidelineComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: BootstrapService, },
    ]; };
    ResizeGuidelineComponent.propDecorators = {
        "guideline": [{ type: Input },],
        "resized": [{ type: Output },],
    };
    return ResizeGuidelineComponent;
}());
export { ResizeGuidelineComponent };
function ResizeGuidelineComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    ResizeGuidelineComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    ResizeGuidelineComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    ResizeGuidelineComponent.propDecorators;
    /** @type {?} */
    ResizeGuidelineComponent.prototype.guideline;
    /** @type {?} */
    ResizeGuidelineComponent.prototype.resized;
    /** @type {?} */
    ResizeGuidelineComponent.prototype.elementRef;
    /** @type {?} */
    ResizeGuidelineComponent.prototype.bootstrapService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplLWd1aWRlbGluZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmF2aWhlYWx0aC93aWRnZXQtZGFzaGJvYXJkLW5nNS8iLCJzb3VyY2VzIjpbInNyYy9kYXNoYm9hcmQvd2lkZ2V0cy9yZXNpemUtZ3VpZGVsaW5lL3Jlc2l6ZS1ndWlkZWxpbmUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFDN0csT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0lBV3RELGtDQUFvQixVQUFzQixFQUFVLGdCQUFrQztRQUFsRSxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQVUscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjt1QkFGbEUsSUFBSSxZQUFZLEVBQU87S0FFZ0Q7Ozs7SUFFM0YsMkNBQVE7OztJQUFSLGVBQW9COzs7O0lBRXBCLHFEQUFrQjs7O0lBQWxCO1FBQ0UscUJBQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1FBQ2xELFdBQVcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2hHLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNyRSxXQUFXLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7S0FDekQ7Ozs7SUFFRCwwQ0FBTzs7O0lBQVA7UUFDRSxxQkFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7UUFDckMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsS0FBSyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9HLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1lBQ3hGLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDMUM7S0FDRjs7Z0JBMUJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QyxRQUFRLEVBQUUsK0RBQStEO29CQUN6RSxNQUFNLEVBQUUsQ0FBQyw4RUFBOEUsQ0FBQztpQkFDekY7Ozs7Z0JBUHdELFVBQVU7Z0JBQzFELGdCQUFnQjs7OzhCQVF0QixLQUFLOzRCQUNMLE1BQU07O21DQVZUOztTQVFhLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEVsZW1lbnRSZWYsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQm9vdHN0cmFwU2VydmljZSB9IGZyb20gJy4uL2Jvb3RzdHJhcC5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXBwLXdpZGdldC1yZXNpemUtZ3VpZGVsaW5lJyxcclxuICB0ZW1wbGF0ZTogYDxkaXYgKG1vdXNlZW50ZXIpPSdvbkhvdmVyKCknICh0b3VjaGVudGVyKT0nb25Ib3ZlcigpJz48L2Rpdj5gLFxyXG4gIHN0eWxlczogW2A6aG9zdHtwb3NpdGlvbjphYnNvbHV0ZX06aG9zdD5kaXZ7Ym9yZGVyLXJpZ2h0OjFweCBkb3R0ZWQgZ3JlZW47aGVpZ2h0OjEwMCV9YF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFJlc2l6ZUd1aWRlbGluZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCB7XHJcbiAgQElucHV0KCkgZ3VpZGVsaW5lOiBhbnk7XHJcbiAgQE91dHB1dCgpIHJlc2l6ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwcml2YXRlIGJvb3RzdHJhcFNlcnZpY2U6IEJvb3RzdHJhcFNlcnZpY2UpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHsgfVxyXG5cclxuICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XHJcbiAgICBjb25zdCB0aGlzRWxlbWVudCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xyXG4gICAgdGhpc0VsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLmJvb3RzdHJhcFNlcnZpY2UuY29sdW1uUHJlZml4ICsgdGhpcy5ndWlkZWxpbmUud2lkdGhPZkd1aWRlbGluZSk7XHJcbiAgICB0aGlzRWxlbWVudC5zdHlsZS50b3AgPSAodGhpcy5ndWlkZWxpbmUudG9wICsgd2luZG93LnNjcm9sbFkpICsgJ3B4JztcclxuICAgIHRoaXNFbGVtZW50LnN0eWxlLmhlaWdodCA9IHRoaXMuZ3VpZGVsaW5lLmhlaWdodCArICdweCc7XHJcbiAgfVxyXG5cclxuICBvbkhvdmVyKCk6IHZvaWQge1xyXG4gICAgY29uc3Qgd2lkZ2V0ID0gdGhpcy5ndWlkZWxpbmUud2lkZ2V0O1xyXG4gICAgaWYgKHRoaXMuZ3VpZGVsaW5lLnRhcmdldFdpZHRoT2ZXaWRnZXQgIT09IHRoaXMuYm9vdHN0cmFwU2VydmljZS5nZXRXaWR0aCh3aWRnZXQuZ2V0Q3VycmVudFdpZHRoLmJpbmQod2lkZ2V0KSkpIHtcclxuICAgICAgdGhpcy5ib290c3RyYXBTZXJ2aWNlLnJlc2l6ZSh0aGlzLmd1aWRlbGluZS53aWRnZXQsIHRoaXMuZ3VpZGVsaW5lLnRhcmdldFdpZHRoT2ZXaWRnZXQpO1xyXG4gICAgICB0aGlzLnJlc2l6ZWQuZW1pdCh0aGlzLmd1aWRlbGluZS53aWRnZXQpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=