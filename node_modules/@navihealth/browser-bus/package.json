{
  "_args": [
    [
      {
        "raw": "@navihealth/browser-bus@C:/MockNpmRepo/navihealth-browser-bus-1.0.0.tgz",
        "scope": "@navihealth",
        "escapedName": "@navihealth%2fbrowser-bus",
        "name": "@navihealth/browser-bus",
        "rawSpec": "C:/MockNpmRepo/navihealth-browser-bus-1.0.0.tgz",
        "spec": "C:\\MockNpmRepo\\navihealth-browser-bus-1.0.0.tgz",
        "type": "local"
      },
      "c:\\MockNpmRepo\\navihealth-architect-address-widget-1.0.9.tgz"
    ]
  ],
  "_from": "..\\..\\..\\..\\MockNpmRepo\\navihealth-browser-bus-1.0.0.tgz",
  "_id": "@navihealth/browser-bus@1.0.0",
  "_inCache": true,
  "_location": "/@navihealth/browser-bus",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@navihealth/browser-bus@C:/MockNpmRepo/navihealth-browser-bus-1.0.0.tgz",
    "scope": "@navihealth",
    "escapedName": "@navihealth%2fbrowser-bus",
    "name": "@navihealth/browser-bus",
    "rawSpec": "C:/MockNpmRepo/navihealth-browser-bus-1.0.0.tgz",
    "spec": "C:\\MockNpmRepo\\navihealth-browser-bus-1.0.0.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "/@navihealth/architect-address-widget",
    "/@navihealth/architect-list-widget"
  ],
  "_resolved": "file:..\\..\\..\\..\\MockNpmRepo\\navihealth-browser-bus-1.0.0.tgz",
  "_shasum": "d4d5dfe46f499be85087e15b77a9fe84b8759584",
  "_shrinkwrap": null,
  "_spec": "@navihealth/browser-bus@C:/MockNpmRepo/navihealth-browser-bus-1.0.0.tgz",
  "_where": "c:\\MockNpmRepo\\navihealth-architect-address-widget-1.0.9.tgz",
  "author": "",
  "dependencies": {},
  "description": "@navihealth/browser-bus is used for decoupled communication between components in the browser.",
  "devDependencies": {
    "@types/jasmine": "^2.8.8",
    "clean-webpack-plugin": "^0.1.19",
    "jasmine": "^3.1.0",
    "jasmine-spec-reporter": "^4.2.1",
    "jsdom": "^11.11.0",
    "jsdom-global": "^3.0.2",
    "nyc": "^12.0.2",
    "ts-loader": "^4.3.1",
    "ts-node": "^6.1.0",
    "tslint": "^5.10.0",
    "tslint-loader": "^3.6.0",
    "typescript": "^2.9.1",
    "webpack": "^4.9.1",
    "webpack-cli": "^2.1.4"
  },
  "keywords": [],
  "license": "ISC",
  "main": "./lib/bus.js",
  "module": "./lib/bus.js",
  "name": "@navihealth/browser-bus",
  "optionalDependencies": {},
  "readme": "# nh-browser-bus\r\n\r\nnh-browser-bus is a service bus implementation used for decoupled communication between components in the browser.\r\n\r\n# Installation\r\n\r\nnpm install --save nh-browser-bus\r\n\r\n# Usage\r\n\r\n## Get an instance of the bus\r\n\r\n```\r\nimport busFactory from \"nh-browser-bus\";\r\n\r\nconst bus = busFactory.create();\r\n```\r\n\r\n## Notify that an event just occurred\r\n\r\n```\r\nconst event = {\r\n    eventName: \"PATIENT_ADDED\",\r\n    message: {\r\n        id: \"123\",\r\n        name: \"Warren Zevon\"\r\n    }\r\n};\r\n\r\nbus.notify(event);\r\n```\r\n\r\n## Listen for an event\r\n\r\n```\r\nconst listener = {\r\n    eventName: \"PATIENT_ADDED\",\r\n    respond: (event) => {\r\n        console.log(event);\r\n    }\r\n};\r\n\r\nbus.listen(listener);\r\n```\r\n\r\n## Unlisten to events\r\n\r\n```\r\nconst listener = {\r\n    eventName: \"PATIENT_ADDED\",\r\n    respond: (event) => {\r\n        console.log(event);\r\n    }\r\n};\r\n\r\nbus.ignore(listener);\r\n```\r\n\r\n## Log bus activity to the console. This is helpful in a dev environment, but should be turned off for production builds.\r\n\r\nIn your application's webpack config file add an instance of a DefinePlugin, like this...\r\n\r\n```\r\nconst webpack = require('webpack');\r\n\r\nmodule.exports = {\r\n    plugins: [\r\n        new webpack.DefinePlugin({\r\n            'process.env': {\r\n                DEV: JSON.stringify(true)\r\n            }\r\n        })\r\n    ]\r\n};\r\n```\r\n\r\n# Useful Commands\r\n\r\n## To test the library\r\nnpm run test\r\n\r\n## To report code coverage of tests\r\nnpm run coverage\r\n\r\n## To build the library in dev mode\r\nnpm run build:dev\r\n\r\n## To build the library in release mode\r\nnpm run build:release\r\n\r\n## To push library to Artifactory\r\nnpm publish",
  "readmeFilename": "README.md",
  "scripts": {
    "build:dev": "webpack --config webpack.dev.js",
    "build:release": "webpack --config webpack.release.js",
    "coverage": "nyc npm run test",
    "lint": "tslint --project tsconfig.json --config tslint.json 'src/**/*.ts'",
    "test": "node ./dependencies/jasmine-ts/lib/index.js --config=jasmine.json --compilerOptions={\\\"module\\\":\\\"commonjs\\\"}"
  },
  "version": "1.0.0"
}
